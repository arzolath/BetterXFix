service: vxX

provider:
  name: aws
  runtime: python3.8
  stage: dev
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - { "Fn::GetAtt": ["vxXDynamoTable", "Arn"] }
  environment:
    VXX_CACHE_TABLE: ${self:custom.tableName}
    RUNNING_SERVERLESS: 1
    VXX_LINK_CACHE: ${env:VXX_LINK_CACHE, 'json'}
    VXX_DATABASE: ${env:VXX_DATABASE, 'none'}
    VXX_METHOD: ${env:VXX_METHOD, 'hybrid'}
    VXX_COLOR: ${env:VXX_COLOR, '#43B581'}
    VXX_APP_NAME: ${env:VXX_APP_NAME, 'vxX'}
    VXX_REPO: ${env:VXX_REPO, 'https://github.com/arzolath/BetterXFix'}
    VXX_URL: ${env:VXX_URL, 'https://vxx.com'}
    VXX_COMBINATION_METHOD: ${env:VXX_COMBINATION_METHOD, 'local'}
    VXX_GIF_CONVERT_API: ${env:VXX_GIF_CONVERT_API, ''}
    VXX_WORKAROUND_TOKENS: ${env:VXX_WORKAROUND_TOKENS, ''}
    VXX_PROXIES: ${env:VXX_PROXIES, ''}

package:
  patterns:
    - "!node_modules/**"
    - "!venv/**"

plugins:
  - serverless-wsgi
  - serverless-python-requirements
  - serverless-plugin-common-excludes
  - serverless-plugin-include-dependencies

functions:
  vxXApp:
    handler: wsgi_handler.handler
    url: true
    timeout: 15
    memorySize: 150
    layers:
      - Ref: PythonRequirementsLambdaLayer

custom:
  tableName: "tweets-table-${self:provider.stage}"
  wsgi:
    app: twitfix.app
  pythonRequirements:
    layer: true
    dockerizePip: false

resources:
  Resources:
    vxXDynamoTable:
      Type: "AWS::DynamoDB::Table"
      Properties:
        AttributeDefinitions:
          - AttributeName: tweet
            AttributeType: S
        KeySchema:
          - AttributeName: tweet
            KeyType: HASH
        TableName: ${self:custom.tableName}
        BillingMode: PAY_PER_REQUEST
        TimeToLiveSpecification:
          AttributeName: ttl
          Enabled: true
